name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  actions: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master branch
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0

    - name: Create and push to master
      run: |
        git checkout -b master
        git push origin master

    - name: Checkout release branch
      run: git checkout master

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine python-semantic-release setuptools-scm pylint

    - name: Run pylint linting
      run: |
        pylint **/*.py
      continue-on-error: false # Ensures that the job fails if linting issues are found

    - name: Run semantic-release and determine version
      id: semantic_version
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        # Run semantic-release to determine the version
        semantic-release version
        # Extract the version from the latest tag
        VERSION=$(git describe --tags --abbrev=0)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # - name: Create and push version tag
    #   run: |
    #     git tag -a "$VERSION" -m "Release $VERSION"
    #     git push origin --tags

    # - name: Raise PR from master to main
    #   uses: peter-evans/create-pull-request@v5
    #   with:
    #     base: main
    #     head: master
    #     title: 'Release PR: master -> main'
    #     body: 'This PR merges the changes from the master branch back into main after the release.'
    #     branch: pr-master-to-main
